/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package spiderman;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ZxoR (Yonatan)
 */
public class regexSettings extends javax.swing.JDialog {

    /**
     * Creates new form regexSettings
     */
    DefaultTableModel regexListModel;

    public regexSettings(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();
        regexListModel = (DefaultTableModel) regexList.getModel();
        for (int x = 0; x < main.regexs.getRowCount(); x++) {
            String desc = main.regexs.getValueAt(x, 0).toString();
            String regex = main.regexs.getValueAt(x, 1).toString();
            Boolean enabled = Boolean.parseBoolean(main.regexs.getValueAt(x, 2).toString());
            regexListModel.addRow(new Object[]{desc, regex, enabled});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        regexList = new javax.swing.JTable();
        insertButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Regex settings dialog");

        regexList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Regex", "Enabled"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        regexList.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(regexList);
        if (regexList.getColumnModel().getColumnCount() > 0) {
            regexList.getColumnModel().getColumn(0).setMinWidth(50);
            regexList.getColumnModel().getColumn(0).setPreferredWidth(200);
            regexList.getColumnModel().getColumn(0).setMaxWidth(400);
            regexList.getColumnModel().getColumn(2).setMinWidth(100);
            regexList.getColumnModel().getColumn(2).setPreferredWidth(100);
            regexList.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        applyButton.setText("Apply changes");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(deleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertButton)
                    .addComponent(deleteButton)
                    .addComponent(applyButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (regexList.getSelectedRow() >= 0) {
            regexListModel.removeRow(regexList.getSelectedRow());
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        regexListModel.addRow(new Object[]{"My custom regex", "(My first regex)", false});
    }//GEN-LAST:event_insertButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        for (int x = 0; x < regexList.getRowCount(); x++) {
            String theregex = regexList.getValueAt(x, 1).toString();
            Boolean enabled = Boolean.parseBoolean(regexList.getValueAt(x, 2).toString());
            if ((!checkIfRegexIsVaild(theregex)) && (enabled)) {
                String desc = regexList.getValueAt(x, 0).toString();
                regexListModel.setValueAt(false, x, 2);
                JOptionPane.showMessageDialog(null, "The regex \"" + desc + "\" is not vaild and therefore disabled", "Regex is not vaild", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        main.regexs.setRowCount(0); //removes the old
        for (int x = 0; x < regexList.getRowCount(); x++) {
            String desc = regexList.getValueAt(x, 0).toString();
            String regex = regexList.getValueAt(x, 1).toString();
            Boolean enabled = Boolean.parseBoolean(regexList.getValueAt(x, 2).toString());
            main.regexs.addRow(new Object[]{desc, regex, enabled});
        }
        this.setVisible(false);
        try {
            main.saveSettings();
        } catch (SQLException ex) {
            Logger.getLogger(regexSettings.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(regexSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(regexSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(regexSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(regexSettings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                regexSettings dialog = new regexSettings(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton insertButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable regexList;
    // End of variables declaration//GEN-END:variables

    public Boolean checkIfRegexIsVaild(String pattern) {
        try {
            Pattern.compile(pattern);
        } catch (PatternSyntaxException exception) {
            return false;
        }
        return true;
    }
}
